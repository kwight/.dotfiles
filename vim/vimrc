" vim
set nocompatible

" vim-plug
call plug#begin()
Plug 'mhartington/oceanic-next'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'ekalinin/Dockerfile.vim'
Plug 'othree/yajs.vim', { 'for': 'javascript' }
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'mxw/vim-jsx'
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'neomake/neomake'
Plug 'Shougo/deoplete.nvim'
call plug#end()

" general config
set nobackup
set nowritebackup
set noswapfile
set number
set relativenumber
set history=100
set showmode
set visualbell
set autoread
set hidden
set autoindent
set copyindent
set smarttab
set noet
set tabstop=4
set shiftwidth=4
set showmatch
set backspace=indent,eol,start
set scrolloff=5
set laststatus=2
set cursorline
set incsearch
set hlsearch
set showcmd
set ignorecase
set smartcase
set splitbelow
set splitright
set wildmode=longest,list,full
set wildmenu
set timeoutlen=1000 ttimeoutlen=0
set completeopt+=noinsert

" filetypes
autocmd BufNewFile,BufRead *.md set filetype=markdown

" mapping
map ; :
let mapleader=","
map <leader>h :help 
map <leader>t :tabnew 
map <leader>s :source $MYVIMRC<CR>
map <leader>rc :tabnew $MYVIMRC<CR>
map <leader>bo :browse old<CR>
map <leader>pi :PlugInstall<CR>
map <leader>pc :PlugClean<CR>
nnoremap <silent> <Esc> :nohlsearch<Bar>:echo<CR>

" theme
colorscheme OceanicNext
set background=dark
let g:airline_theme='oceanicnext'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

" plugin settings
let g:jsx_ext_required = 0
let g:neomake_javascript_enabled_makers = ['eslint']
autocmd! BufWritePost,BufEnter * Neomake
let g:neomake_error_sign = {'text': '•', 'texthl': 'NeomakeErrorSign'}
let g:neomake_warning_sign = {'text': '•', 'texthl': 'NeomakeWarningSign'}
let g:neomake_info_sign = {'text': '•', 'texthl': 'NeomakeInfoSign'}
let g:neomake_message_sign = {'text': '•', 'texthl': 'NeomakeMessageSign'}
let g:deoplete#enable_at_startup = 1

" CtrlP and Search
let g:ctrlp_max_files = 0
let g:ctrlp_max_depth = 40
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>'],
    \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
    \ }
if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor
    let g:ctrlp_user_command = 'ag -Q -l --nocolor --hidden -g "" %s'
    let g:ctrlp_use_caching = 0
endif

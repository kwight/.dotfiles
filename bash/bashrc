# Use Vim as the editor.
export VISUAL=vim
export EDITOR="$VISUAL"

# FZF.
export FZF_DEFAULT_COMMAND="rg -g '!*bower_components*' --files"

# Ensure Homebrew packages are first in the PATH.
export PATH="/usr/local/sbin:$PATH:$HOME/bin"
export N_PREFIX=$HOME

# Git integration
source ~/.dotfiles/git/git-completion.bash
source ~/.dotfiles/git/git-prompt.sh
__git_complete gco _git_checkout
__git_complete gcor _git_checkout
export PS1='\[\033[31m\]\h \[\033[36m\]$? \[\033[34m\]\W$(__git_ps1 " \[\033[32m\]%s")\[\033[m\] > '

# Vim Mode for the command prompt.
set -o vi

# Aliases and clipboard expansions.
alias a='type'
alias ba='vim ~/.bash_aliases'
alias brc='vim ~/.dotfiles/bash/bashrc'
function c() { local dir;dir=$(find ${1:-.} \( -path '*/\.*' -o -path '*/node_modules*' -o -path '*/bower_components*' \) -prune -o -type d -print 2> /dev/null | fzf +m) && cd "$dir"; }
function cache() { echo -n "http://webcache.googleusercontent.com/search?q=cache:" | pbcopy; }
alias cdo='cd ~/.dotfiles'
alias cdoc='cd ~/Documents'
alias cde='cd ~/Desktop'
alias ch='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias cl='clear'
alias colors='~/.dotfiles/bash/colors.sh'
function e() { local file && file=$(fzf -m); if test -r "$file"; then vim $file; fi; }
alias d="docker info"
function db() { docker build "$@" .; }
alias dc="docker container"
alias dcl="docker container ls"
function dcr() { local container=$(docker container ls | fzf | awk '{print $1;}'); docker container restart $container; }
function dcs() { local container=$(docker container ls | fzf | awk '{print $1;}'); docker container stop $container; }
alias dco="docker-compose"
alias dcou="docker-compose up -d"
alias dcp='yes | docker container prune'
alias di="docker image"
alias dil="docker image ls"
alias dm="docker-machine"
function dme() { eval $(docker-machine env $1); }
function dmeu() { eval $(docker-machine env -u); }
alias dml="docker-machine ls"
alias dms="docker-machine ssh"
alias dnl="docker node ls"
alias dr="docker run"
alias dp="docker push"
alias ds="docker service"
alias dsl="docker service ls"
alias dst="docker stack"
alias dstd="docker stack deploy"
alias dsw="docker swarm"
alias dt="docker tag"
alias dv="docker version"
alias f="rg -g '!*bower_components*'"
alias g='git status'
alias ga='git add -p'
alias gaa='git add'
alias gaaa='git add .'
alias gb='git branch'
alias gbi='git bisect start'
alias gbib='git bisect bad'
alias gbig='git bisect good'
alias gbir='git bisect reset'
alias gc='git commit'
alias gcam='git commit --amend'
alias gcl='git clone'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcom='git checkout master'
alias gcon='git config --list'
function gcor() { git checkout -t origin/$1; }
alias gcp='git cherry-pick'
alias gd='git diff'
alias gds='git diff --staged'
alias gi='git init'
alias gl='git log'
alias gp='git push'
alias gpf='git push --force-with-lease'
alias gpo='git push -u origin'
alias gpom='git push -u origin master'
alias gpu='git pull'
alias gpur='git pull --rebase'
function gr() { git rebase -i HEAD~$1; }
alias gra='git rebase --abort'
alias grc='git rebase --continue'
alias gre='git reset'
alias greh='git reset --hard'
alias grema='git remote add origin'
alias grm='git rebase master'
alias grs='git rebase --skip'
alias gs='git show'
function gsa() { git submodule add $1 vim/pack/packages/start/${1//https:\/\/github.com\/[a-zA-Z0-9-]*\/}; }
function gsd() { git submodule deinit vim/pack/packages/start/$1; }
function gsi() { git submodule init vim/pack/packages/start/$1; }
alias gss='git submodule status'
alias gst='git stash -u'
alias gsta='git stash apply'
alias gstl='git stash list'
alias gsu='git submodule update --recursive'
alias gsui='git submodule update --init --recursive'
alias h='sudo vim /etc/hosts'
alias hi='history | grep'
function lorem() { echo -n "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In dapibus, metus id molestie laoreet, magna eros aliquet neque, a mattis nisl nibh ut lacus. Fusce lobortis aliquam massa a adipiscing. Mauris sed nunc dui, quis molestie nunc." | pbcopy; }
alias k='kubectl'
alias kc='kubectl config'
alias kd='kubectl delete'
alias ked='kubectl expose deployment'
alias kg='kubectl get'
alias kgd='kubectl get deployments'
alias kgs='kubectl get services'
alias kr='kubectl run'
alias l='ls -ahlG'
alias lp='ls -ahlG ~/.dotfiles/vim/pack/packages/start'
alias m='man'
alias mc='make clean'
alias md='make distclean'
alias mr='make run'
alias mt='make test'
alias ni='npm install'
alias nr='npm run'
alias ns='npm start'
alias p='pwd'
alias rmr='rm -rfv'
alias so='source ~/.dotfiles/bash/bash_profile'
function shrug() { echo -n "¯\_(ツ)_/¯" | pbcopy; }
alias s='svn status'
alias sagi='sudo apt-get install'
alias sagu='sudo apt-get update'
alias sagug='sudo apt-get upgrade'
alias sc='svn commit'
alias sd='svn diff | colordiff'
alias sr='svn revert -R'
alias su='svn update'
alias sup='sudo poweroff'
alias sur='sudo reboot'
alias ta='tmux attach -t'
alias td='tmux detach'
alias te='phpunit'
alias tl='tmux ls'
function t() { local session=$(tl | fzf | awk '{print $1;}'); tmux switch -t $session || tmux attach -t $session || tmux; }
alias tk='tmux kill-session -t'
alias tn='tmux new -s'
function tracimg() { echo -n "[[Image($1.png, 100%)]]" | pbcopy; }
alias trc='v ~/.tmux.conf'
alias ty='type'
alias ubv='lsb_release -a'
alias untar='tar xvzf'
alias v='vim'
alias vrc='vim ~/.dotfiles/vim/vimrc'
alias vs='code .'
alias ya='yarn add'
alias yga='yarn global add'
alias ygr='yarn global remove'
alias yi='yarn install'
alias yr='yarn remove'
alias ys='yarn start'
alias zomg='git reset --hard && git clean -f -d'

